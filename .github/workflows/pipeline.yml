# This workflow will install Python dependencies, run tests, and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Archive dependencies
      run: tar -czf dependencies.tar.gz .venv
    - name: Upload dependencies
      uses: actions/upload-artifact@v3
      with:
        name: dependencies
        path: dependencies.tar.gz

  lint:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Download dependencies
      uses: actions/download-artifact@v3
      with:
        name: dependencies
        path: .
    - name: Extract dependencies
      run: tar -xzf dependencies.tar.gz
    - name: Check code compliance with black and isort
      run: |
        black --check . 
        isort --check-only .

  tests:
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Download dependencies
      uses: actions/download-artifact@v3
      with:
        name: dependencies
        path: .
    - name: Extract dependencies
      run: tar -xzf dependencies.tar.gz
    - name: Test with pytest
      run: pytest

  deployment:
    runs-on: ubuntu-latest
    needs: tests

    steps:
    - name: Download dependencies
      uses: actions/download-artifact@v3
      with:
        name: dependencies
        path: .
    - name: Extract dependencies
      run: tar -xzf dependencies.tar.gz
    - name: Deploy application
      run: echo "Deploying your application..."
